-- Script t∆∞∆°ng th√≠ch v·ªõi MySQL 5.7 v√† c≈© h∆°n
-- L√†m s·∫°ch ExamAnswers tr√πng l·∫∑p m√† kh√¥ng d√πng Window Functions

-- 1. Backup d·ªØ li·ªáu
DROP TABLE IF EXISTS ExamAnswers_backup;
CREATE TABLE ExamAnswers_backup AS SELECT * FROM ExamAnswers;

-- 2. Ph√¢n t√≠ch d·ªØ li·ªáu tr√πng l·∫∑p
SELECT 'PH√ÇN T√çCH D·ªÆ LI·ªÜU TR√ôNG L·∫∂P:' as title;

SELECT 
  exam_id,
  question_id,
  COUNT(*) as duplicate_count,
  MIN(id) as first_id,
  MAX(id) as last_id
FROM ExamAnswers
GROUP BY exam_id, question_id
HAVING duplicate_count > 1
ORDER BY duplicate_count DESC;

-- 3. ƒê·∫øm t·ªïng s·ªë b·∫£n ghi tr√πng l·∫∑p
SELECT 
  CONCAT('C√≥ ', COUNT(*), ' c·∫∑p (exam_id, question_id) b·ªã tr√πng l·∫∑p') as summary
FROM (
  SELECT exam_id, question_id
  FROM ExamAnswers
  GROUP BY exam_id, question_id
  HAVING COUNT(*) > 1
) as duplicates;

-- 4. ƒê·∫øm t·ªïng s·ªë b·∫£n ghi s·∫Ω b·ªã x√≥a
SELECT 
  CONCAT('S·∫Ω x√≥a ', SUM(cnt - 1), ' b·∫£n ghi (gi·ªØ l·∫°i ID l·ªõn nh·∫•t)') as delete_summary
FROM (
  SELECT COUNT(*) as cnt
  FROM ExamAnswers
  GROUP BY exam_id, question_id
  HAVING cnt > 1
) as duplicate_counts;

-- 5. X√ìA C√ÅC B·∫¢N GHI TR√ôNG L·∫∂P 
-- Ch·ªâ gi·ªØ l·∫°i b·∫£n ghi c√≥ ID l·ªõn nh·∫•t cho m·ªói c·∫∑p (exam_id, question_id)
DELETE ea1 FROM ExamAnswers ea1
INNER JOIN ExamAnswers ea2 ON 
  ea1.exam_id = ea2.exam_id 
  AND ea1.question_id = ea2.question_id 
  AND ea1.id < ea2.id;

-- 6. Ki·ªÉm tra k·∫øt qu·∫£
SELECT 'K·∫æT QU·∫¢ SAU KHI L√ÄM S·∫†CH:' as result_title;

SELECT CONCAT('T·ªïng s·ªë ExamAnswers c√≤n l·∫°i: ', COUNT(*)) as final_count
FROM ExamAnswers;

-- Ki·ªÉm tra c√≤n tr√πng l·∫∑p kh√¥ng
SELECT 
  CASE 
    WHEN COUNT(*) = 0 THEN '‚úÖ TH√ÄNH C√îNG - Kh√¥ng c√≤n tr√πng l·∫∑p!'
    ELSE CONCAT('‚ùå V·∫´n c√≤n ', COUNT(*), ' tr∆∞·ªùng h·ª£p tr√πng l·∫∑p')
  END as duplicate_check_result
FROM (
  SELECT exam_id, question_id
  FROM ExamAnswers
  GROUP BY exam_id, question_id
  HAVING COUNT(*) > 1
) as remaining_duplicates;

-- 7. So s√°nh tr∆∞·ªõc v√† sau
SELECT 
  'TR∆Ø·ªöC' as timing,
  COUNT(*) as total_records
FROM ExamAnswers_backup
UNION ALL
SELECT 
  'SAU' as timing,
  COUNT(*) as total_records
FROM ExamAnswers;

-- 8. Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n rollback
SELECT 'ƒê·ªÇ ROLLBACK N·∫æU C·∫¶N:' as rollback_title;

SELECT 'DROP TABLE ExamAnswers; RENAME TABLE ExamAnswers_backup TO ExamAnswers;' as rollback_command;

SELECT 'üéâ ExamAnswers cleanup HO√ÄN TH√ÄNH!' as final_status;
